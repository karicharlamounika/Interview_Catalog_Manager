{
	"info": {
		"_postman_id": "4c6de255-8e6e-4e2e-890b-237ea5da2e82",
		"name": "Catalog Manger",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12081536"
	},
	"item": [
		{
			"name": "Positive Cases",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Validate user registration\", function () {\r",
									"    pm.expect(responseBody.message).to.eql(\"User registered successfully\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var responseBody = pm.response.json();\r",
									"pm.collectionVariables.set(\"Authtoken\", responseBody.token);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"sheldoncooper@gmail.com\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Items",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
									"\r",
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: token\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
									"\r",
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: token\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test('Response contains the \"Id\" property', function () {\r",
									"    pm.expect(responseBody).to.have.property('id');\r",
									"});\r",
									"\r",
									"\r",
									"pm.collectionVariables.set(\"ItemId\", responseBody.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Iphone 18\", \r\n    \"quantity\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
									"var itemId = pm.collectionVariables.get('ItemId')\r",
									"\r",
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: token\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Mac Book Air\",\r\n    \"quantity\": \"89\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/items/{{ItemId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"items",
								"{{ItemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
									"\r",
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: token\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/items/{{ItemId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"items",
								"{{ItemId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Cases",
			"item": [
				{
					"name": "Access Token Missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"pm.test(\"Status message is Unauthorized\", function () {\r",
									"    pm.response.to.have.status(\"Unauthorized\");\r",
									"});\r",
									"pm.test(\"Get items failed as access token is missing\", function () {\r",
									"    pm.expect(responseBody.message).to.eql(\"Access token missing\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Already Exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.test(\"Status code is 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"pm.test(\"user registration failed as User already exists\", function () {\r",
									"    pm.expect(responseBody.error).to.eql(\"User already exists\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Item Not Found",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
									"\r",
									"pm.request.headers.add({\r",
									"    key: 'Authorization',\r",
									"    value: token\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Delete item failed as Item not found \", function () {\r",
									"    pm.expect(responseBody.message).to.eql(\"Item not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/items/5",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"items",
								"5"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Login failed with error Invalid credentials \", function () {\r",
									"    pm.expect(responseBody.message).to.eql(\"Invalid credentials\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"bob231@gma\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "Authtoken",
			"value": ""
		},
		{
			"key": "ItemId",
			"value": ""
		}
	]
}