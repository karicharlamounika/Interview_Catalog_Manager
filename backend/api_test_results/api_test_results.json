{
  "collection": {
    "_": {
      "postman_id": "4c6de255-8e6e-4e2e-890b-237ea5da2e82",
      "exporter_id": "12081536"
    },
    "item": [
      {
        "id": "d9898580-4546-4868-920a-889bce058c5f",
        "name": "Positive Cases",
        "item": [
          {
            "id": "e2be2089-8ad9-45b8-a928-d34ff793854e",
            "name": "Register User",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "register"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              },
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "90504df0-2381-4078-b20c-f008025f0c04",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var responseBody = pm.response.json();\r",
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "pm.test(\"Validate user registration\", function () {\r",
                    "    pm.expect(responseBody.message).to.eql(\"User registered successfully\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "cc158c7f-d820-4e14-b755-13796dadba88"
                }
              },
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef6234cf-217d-4985-a7f8-1b4b43f0fe83",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35a66fe3-1fa9-4369-9adc-e3340e1670d5"
                }
              }
            ]
          },
          {
            "id": "17153d7d-c290-4418-b6ae-4e51190c6bcb",
            "name": "Login",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "login"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\" : \"sheldoncooper@gmail.com\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "03834f55-dca9-4d24-8fd1-f62644c2d11a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    "\r",
                    "var responseBody = pm.response.json();\r",
                    "pm.collectionVariables.set(\"Authtoken\", responseBody.token);"
                  ],
                  "_lastExecutionId": "c2f8747d-a3e1-49be-9f63-623ef879e64a"
                }
              }
            ]
          },
          {
            "id": "3af240c2-a70b-441f-81a3-6f692cf75b7c",
            "name": "Get Items",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "items"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95ab4a17-0baa-47d9-9eda-17fd252970ae",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                    "\r",
                    "pm.request.headers.add({\r",
                    "    key: 'Authorization',\r",
                    "    value: token\r",
                    "});"
                  ],
                  "_lastExecutionId": "2cd67453-69b4-4720-bd63-881b60934b3f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bef54139-0eb1-4605-9386-852cec0637be",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 200\", function () {\r",
                    "    pm.response.to.have.status(200);\r",
                    "});\r",
                    ""
                  ],
                  "_lastExecutionId": "82c1a45c-0baf-431a-8f59-2eb29ba50274"
                }
              }
            ]
          },
          {
            "id": "db92ef0e-08a3-4f89-a1ef-697d51b58584",
            "name": "Add Item",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "items"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\": \"Iphone 18\", \r\n    \"quantity\": 10\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf9db251-c87c-449e-a747-da1beb345a0d",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                    "\r",
                    "pm.request.headers.add({\r",
                    "    key: 'Authorization',\r",
                    "    value: token\r",
                    "});"
                  ],
                  "_lastExecutionId": "73695b51-66b0-49cd-9d02-fc3db17a3394"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "36008f9c-9eec-4c45-adc1-c04a1f952b84",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var responseBody = pm.response.json();\r",
                    "\r",
                    "pm.test(\"Status code is 201\", function () {\r",
                    "    pm.response.to.have.status(201);\r",
                    "});\r",
                    "\r",
                    "pm.test('Response contains the \"Id\" property', function () {\r",
                    "    pm.expect(responseBody).to.have.property('id');\r",
                    "});\r",
                    "\r",
                    "\r",
                    "pm.collectionVariables.set(\"ItemId\", responseBody.id);"
                  ],
                  "_lastExecutionId": "046c9801-7eb6-432b-9bb5-3b53d286eab5"
                }
              }
            ]
          },
          {
            "id": "b5e1ac1d-abe9-4ac4-a380-c55bae74aa65",
            "name": "Update Item",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "items",
                  "{{ItemId}}"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"name\" : \"Mac Book Air\",\r\n    \"quantity\": \"89\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cedf5062-d6e0-41b8-8986-fab51d8d148f",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                    "var itemId = pm.collectionVariables.get('ItemId')\r",
                    "\r",
                    "pm.request.headers.add({\r",
                    "    key: 'Authorization',\r",
                    "    value: token\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "d3805bfe-dfcd-41ce-b9ad-2212d7702ab0"
                }
              }
            ]
          },
          {
            "id": "7b1e2554-bc1b-41c5-8fa9-c17132e717f4",
            "name": "Delete Item",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "items",
                  "{{ItemId}}"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a42a16d9-a638-445e-9f73-72e92b09a918",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                    "\r",
                    "pm.request.headers.add({\r",
                    "    key: 'Authorization',\r",
                    "    value: token\r",
                    "});"
                  ],
                  "_lastExecutionId": "46e37a51-b374-4807-b5d3-995963842c45"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "afad3af7-57d6-4d3e-b393-6a12e7e61107",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "pm.test(\"Status code is 204\", function () {\r",
                    "    pm.response.to.have.status(204);\r",
                    "});"
                  ],
                  "_lastExecutionId": "f52730b1-9889-4e08-bf75-2ebd1ae7a714"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "29bf8923-0a1b-4c1f-9865-9abdee45b5a4",
        "name": "Negative Cases",
        "item": [
          {
            "id": "d297f917-f6d9-4e37-b597-22bb1928a61c",
            "name": "Access Token Missing",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "items"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4130927a-70cb-4610-8c3a-386a347adc94",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var responseBody = pm.response.json();\r",
                    "pm.test(\"Status code is 401\", function () {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "pm.test(\"Status message is Unauthorized\", function () {\r",
                    "    pm.response.to.have.status(\"Unauthorized\");\r",
                    "});\r",
                    "pm.test(\"Get items failed as access token is missing\", function () {\r",
                    "    pm.expect(responseBody.message).to.eql(\"Access token missing\");\r",
                    "});\r",
                    "\r",
                    ""
                  ],
                  "_lastExecutionId": "2e1fb186-1d52-411f-9344-1364e2a10841"
                }
              }
            ]
          },
          {
            "id": "32be32af-1081-43fa-a274-5c8446c00154",
            "name": "User Already Exists",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "register"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "74f3fdfc-5435-4c3b-a45e-cf72cde6b644",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var responseBody = pm.response.json();\r",
                    "pm.test(\"Status code is 409\", function () {\r",
                    "    pm.response.to.have.status(409);\r",
                    "});\r",
                    "pm.test(\"user registration failed as User already exists\", function () {\r",
                    "    pm.expect(responseBody.error).to.eql(\"User already exists\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "e81ba9e8-dacc-4948-8b69-9ff0ca89b201"
                }
              }
            ]
          },
          {
            "id": "7eee3890-95b1-4dba-8eea-26fa25ca04e8",
            "name": "Item Not Found",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "items",
                  "5"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4d994ae5-58e2-4feb-aca6-40208cf61b0a",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                    "\r",
                    "pm.request.headers.add({\r",
                    "    key: 'Authorization',\r",
                    "    value: token\r",
                    "});"
                  ],
                  "_lastExecutionId": "2a3a1962-844e-4406-8806-9661c23910e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "298d4c20-2f8e-450e-808a-51b461ff9c00",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var responseBody = pm.response.json();\r",
                    "pm.test(\"Status code is 404\", function () {\r",
                    "    pm.response.to.have.status(404);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Delete item failed as Item not found \", function () {\r",
                    "    pm.expect(responseBody.message).to.eql(\"Item not found\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "64aac23a-79cb-4ed7-83c0-b46235fdb84a"
                }
              }
            ]
          },
          {
            "id": "5e8fd995-0492-4ccd-bd7b-5d3b0aed4978",
            "name": "Invalid Credentials",
            "request": {
              "url": {
                "protocol": "http",
                "port": "5000",
                "path": [
                  "login"
                ],
                "host": [
                  "localhost"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\r\n    \"email\" : \"bob231@gma\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
                "options": {
                  "raw": {
                    "language": "json"
                  }
                }
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b57db703-b76c-49cf-a8c3-2c513ccd0b5b",
                  "type": "text/javascript",
                  "packages": {},
                  "exec": [
                    "var responseBody = pm.response.json();\r",
                    "pm.test(\"Status code is 401\", function () {\r",
                    "    pm.response.to.have.status(401);\r",
                    "});\r",
                    "\r",
                    "pm.test(\"Login failed with error Invalid credentials \", function () {\r",
                    "    pm.expect(responseBody.message).to.eql(\"Invalid credentials\");\r",
                    "});"
                  ],
                  "_lastExecutionId": "e8ee016b-3269-4e4b-87f2-7c0f6c90ac28"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "type": "any",
        "value": "",
        "key": "Authtoken"
      },
      {
        "type": "any",
        "value": "",
        "key": "ItemId"
      }
    ],
    "info": {
      "_postman_id": "4c6de255-8e6e-4e2e-890b-237ea5da2e82",
      "name": "Catalog Manger",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "d0f625f5-ba7b-4fea-a6d8-06984832f268",
    "values": []
  },
  "globals": {
    "id": "c44931e8-ee2a-44f0-8fdd-82b5f6325f83",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 15,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 10,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 16,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 6,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 79.7,
      "responseMin": 6,
      "responseMax": 180,
      "responseSd": 59.78302434638113,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1753394829742,
      "completed": 1753394831422
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "97f68f06-ce00-470b-898c-d62d3c11dc3e",
          "httpRequestId": "010c9c2b-02c0-41de-8e5b-e2e7f745d519"
        },
        "item": {
          "id": "e2be2089-8ad9-45b8-a928-d34ff793854e",
          "name": "Register User",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "register"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90504df0-2381-4078-b20c-f008025f0c04",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "pm.test(\"Validate user registration\", function () {\r",
                  "    pm.expect(responseBody.message).to.eql(\"User registered successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "cc158c7f-d820-4e14-b755-13796dadba88"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ef6234cf-217d-4985-a7f8-1b4b43f0fe83",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "35a66fe3-1fa9-4369-9adc-e3340e1670d5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "register"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "52abb256-99bb-4c4c-b2bd-477b9221c3d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "127",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "9ddb84d3-1211-4501-a953-8eeca68a6d25",
          "status": "Conflict",
          "code": 409,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "31"
            },
            {
              "key": "ETag",
              "value": "W/\"1f-lFUySNKwX3L5eGEwGcNcUoVKWhE\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:09 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              85,
              115,
              101,
              114,
              32,
              97,
              108,
              114,
              101,
              97,
              100,
              121,
              32,
              101,
              120,
              105,
              115,
              116,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 148,
          "responseSize": 31
        },
        "id": "e2be2089-8ad9-45b8-a928-d34ff793854e",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 201",
              "message": "expected response to have status code 201 but got 409",
              "stack": "AssertionError: expected response to have status code 201 but got 409\n   at Object.eval sandbox-script.js:1:1)"
            }
          },
          {
            "assertion": "Validate user registration",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Validate user registration",
              "message": "expected undefined to deeply equal 'User registered successfully'",
              "stack": "AssertionError: expected undefined to deeply equal 'User registered successfully'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "78c275d7-3eb6-4479-a7ad-e0eff7ccf78d",
          "length": 10,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c637ac5e-70ac-4c65-8048-b035d7775dca"
        },
        "item": {
          "id": "17153d7d-c290-4418-b6ae-4e51190c6bcb",
          "name": "Login",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\" : \"sheldoncooper@gmail.com\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "03834f55-dca9-4d24-8fd1-f62644c2d11a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "var responseBody = pm.response.json();\r",
                  "pm.collectionVariables.set(\"Authtoken\", responseBody.token);"
                ],
                "_lastExecutionId": "c2f8747d-a3e1-49be-9f63-623ef879e64a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e5e45a16-ad63-4dad-abc2-4cf632724052",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "79",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\" : \"sheldoncooper@gmail.com\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b7e2a58a-68cd-4f48-adba-93b03a18e010",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "195"
            },
            {
              "key": "ETag",
              "value": "W/\"c3-EiRn0LrUFOo4ZL5QyvHhQQ+AgoU\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              116,
              111,
              107,
              101,
              110,
              34,
              58,
              34,
              101,
              121,
              74,
              104,
              98,
              71,
              99,
              105,
              79,
              105,
              74,
              73,
              85,
              122,
              73,
              49,
              78,
              105,
              73,
              115,
              73,
              110,
              82,
              53,
              99,
              67,
              73,
              54,
              73,
              107,
              112,
              88,
              86,
              67,
              74,
              57,
              46,
              101,
              121,
              74,
              112,
              90,
              67,
              73,
              54,
              78,
              83,
              119,
              105,
              90,
              87,
              49,
              104,
              97,
              87,
              119,
              105,
              79,
              105,
              74,
              122,
              97,
              71,
              86,
              115,
              90,
              71,
              57,
              117,
              89,
              50,
              57,
              118,
              99,
              71,
              86,
              121,
              81,
              71,
              100,
              116,
              89,
              87,
              108,
              115,
              76,
              109,
              78,
              118,
              98,
              83,
              73,
              115,
              73,
              109,
              108,
              104,
              100,
              67,
              73,
              54,
              77,
              84,
              99,
              49,
              77,
              122,
              77,
              53,
              78,
              68,
              103,
              122,
              77,
              67,
              119,
              105,
              90,
              88,
              104,
              119,
              73,
              106,
              111,
              120,
              78,
              122,
              85,
              122,
              77,
              122,
              107,
              52,
              78,
              68,
              77,
              119,
              102,
              81,
              46,
              122,
              68,
              67,
              97,
              113,
              97,
              77,
              54,
              73,
              122,
              116,
              51,
              108,
              48,
              108,
              50,
              70,
              85,
              56,
              70,
              51,
              78,
              76,
              50,
              102,
              80,
              109,
              86,
              118,
              101,
              50,
              84,
              89,
              51,
              85,
              65,
              52,
              49,
              65,
              51,
              65,
              100,
              69,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 101,
          "responseSize": 195
        },
        "id": "17153d7d-c290-4418-b6ae-4e51190c6bcb",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "0661286c-1250-41bf-8f56-cb114aa1f828",
          "length": 10,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7ddeaf17-25d2-465d-88fe-22cbc035c49d"
        },
        "item": {
          "id": "3af240c2-a70b-441f-81a3-6f692cf75b7c",
          "name": "Get Items",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "items"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "95ab4a17-0baa-47d9-9eda-17fd252970ae",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                  "\r",
                  "pm.request.headers.add({\r",
                  "    key: 'Authorization',\r",
                  "    value: token\r",
                  "});"
                ],
                "_lastExecutionId": "2cd67453-69b4-4720-bd63-881b60934b3f"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "bef54139-0eb1-4605-9386-852cec0637be",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "82c1a45c-0baf-431a-8f59-2eb29ba50274"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "items"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJzaGVsZG9uY29vcGVyQGdtYWlsLmNvbSIsImlhdCI6MTc1MzM5NDgzMCwiZXhwIjoxNzUzMzk4NDMwfQ.zDCaqaM6Izt3l0l2FU8F3NL2fPmVve2TY3UA41A3AdE"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "743474bd-97f6-408e-ad95-24b108fa9ca0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "response": {
          "id": "9e438b16-a343-48c1-ac87-3be24bde7df5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "259"
            },
            {
              "key": "ETag",
              "value": "W/\"103-TRLMSzIqDUhH2hGtJppkZIqYe54\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              54,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              76,
              101,
              110,
              111,
              118,
              111,
              32,
              83,
              51,
              52,
              48,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              55,
              56,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              55,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              73,
              112,
              104,
              111,
              110,
              101,
              32,
              56,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              49,
              54,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              56,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              73,
              112,
              104,
              111,
              110,
              101,
              32,
              49,
              55,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              49,
              48,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              57,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              73,
              112,
              104,
              111,
              110,
              101,
              32,
              49,
              56,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              49,
              48,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              49,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              99,
              32,
              66,
              111,
              111,
              107,
              32,
              65,
              105,
              114,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              56,
              57,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              50,
              52,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              73,
              112,
              104,
              111,
              110,
              101,
              32,
              49,
              54,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              49,
              54,
              125,
              93
            ]
          },
          "cookie": [],
          "responseTime": 6,
          "responseSize": 259
        },
        "id": "3af240c2-a70b-441f-81a3-6f692cf75b7c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "333b58bb-b819-4bbd-97ea-d54bbbf2a4ad",
          "length": 10,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d59370f6-f423-4f79-91c1-f24851065c5c"
        },
        "item": {
          "id": "db92ef0e-08a3-4f89-a1ef-697d51b58584",
          "name": "Add Item",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "items"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\": \"Iphone 18\", \r\n    \"quantity\": 10\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "bf9db251-c87c-449e-a747-da1beb345a0d",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                  "\r",
                  "pm.request.headers.add({\r",
                  "    key: 'Authorization',\r",
                  "    value: token\r",
                  "});"
                ],
                "_lastExecutionId": "73695b51-66b0-49cd-9d02-fc3db17a3394"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "36008f9c-9eec-4c45-adc1-c04a1f952b84",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "pm.test('Response contains the \"Id\" property', function () {\r",
                  "    pm.expect(responseBody).to.have.property('id');\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.collectionVariables.set(\"ItemId\", responseBody.id);"
                ],
                "_lastExecutionId": "046c9801-7eb6-432b-9bb5-3b53d286eab5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "items"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJzaGVsZG9uY29vcGVyQGdtYWlsLmNvbSIsImlhdCI6MTc1MzM5NDgzMCwiZXhwIjoxNzUzMzk4NDMwfQ.zDCaqaM6Izt3l0l2FU8F3NL2fPmVve2TY3UA41A3AdE"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6c8b7d07-f262-460f-a827-a8dab612e74e",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "51",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\": \"Iphone 18\", \r\n    \"quantity\": 10\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7f57c9c1-64b2-4f66-ab9c-7f0dbaf2128b",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "42"
            },
            {
              "key": "ETag",
              "value": "W/\"2a-0xrwMChGGX7Ne3381HqZ+9aGNZk\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              54,
              48,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              73,
              112,
              104,
              111,
              110,
              101,
              32,
              49,
              56,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              49,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 180,
          "responseSize": 42
        },
        "id": "db92ef0e-08a3-4f89-a1ef-697d51b58584",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Response contains the \"Id\" property",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2113883f-65fc-48c0-8cba-3392be3e0b98",
          "length": 10,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1cd5dbd6-6e45-4816-9b12-ea505760e13b"
        },
        "item": {
          "id": "b5e1ac1d-abe9-4ac4-a380-c55bae74aa65",
          "name": "Update Item",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "items",
                "{{ItemId}}"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"name\" : \"Mac Book Air\",\r\n    \"quantity\": \"89\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "cedf5062-d6e0-41b8-8986-fab51d8d148f",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                  "var itemId = pm.collectionVariables.get('ItemId')\r",
                  "\r",
                  "pm.request.headers.add({\r",
                  "    key: 'Authorization',\r",
                  "    value: token\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "d3805bfe-dfcd-41ce-b9ad-2212d7702ab0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "items",
              "60"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJzaGVsZG9uY29vcGVyQGdtYWlsLmNvbSIsImlhdCI6MTc1MzM5NDgzMCwiZXhwIjoxNzUzMzk4NDMwfQ.zDCaqaM6Izt3l0l2FU8F3NL2fPmVve2TY3UA41A3AdE"
            },
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c1a6e3f1-9b5a-4918-a338-62b44e9a962d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "56",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"name\" : \"Mac Book Air\",\r\n    \"quantity\": \"89\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9e41b008-1081-4ec1-b40e-3e064b5dfa32",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "49"
            },
            {
              "key": "ETag",
              "value": "W/\"31-6uNWn1YMwTVw78g3MI5AQ9d5oAQ\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              48,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              77,
              97,
              99,
              32,
              66,
              111,
              111,
              107,
              32,
              65,
              105,
              114,
              34,
              44,
              34,
              113,
              117,
              97,
              110,
              116,
              105,
              116,
              121,
              34,
              58,
              34,
              56,
              57,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 115,
          "responseSize": 49
        },
        "id": "b5e1ac1d-abe9-4ac4-a380-c55bae74aa65"
      },
      {
        "cursor": {
          "ref": "240d3a0d-4247-40c5-b78d-13db07f7936e",
          "length": 10,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a078f1df-629e-4aec-ac51-e2a28a7d6c79"
        },
        "item": {
          "id": "7b1e2554-bc1b-41c5-8fa9-c17132e717f4",
          "name": "Delete Item",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "items",
                "{{ItemId}}"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "a42a16d9-a638-445e-9f73-72e92b09a918",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                  "\r",
                  "pm.request.headers.add({\r",
                  "    key: 'Authorization',\r",
                  "    value: token\r",
                  "});"
                ],
                "_lastExecutionId": "46e37a51-b374-4807-b5d3-995963842c45"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "afad3af7-57d6-4d3e-b393-6a12e7e61107",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "pm.test(\"Status code is 204\", function () {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});"
                ],
                "_lastExecutionId": "f52730b1-9889-4e08-bf75-2ebd1ae7a714"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "items",
              "60"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJzaGVsZG9uY29vcGVyQGdtYWlsLmNvbSIsImlhdCI6MTc1MzM5NDgzMCwiZXhwIjoxNzUzMzk4NDMwfQ.zDCaqaM6Izt3l0l2FU8F3NL2fPmVve2TY3UA41A3AdE"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6a298aed-bbde-4241-baae-b668f6890b75",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e8eaa30a-adbc-45aa-bf58-a417aa5b05e8",
          "status": "No Content",
          "code": 204,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": []
          },
          "cookie": [],
          "responseTime": 85,
          "responseSize": 0
        },
        "id": "7b1e2554-bc1b-41c5-8fa9-c17132e717f4",
        "assertions": [
          {
            "assertion": "Status code is 204",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "7c8c57ea-abc1-4234-a0a5-b6487aa8b325",
          "length": 10,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "88042f8d-db2f-4760-846b-9a991d8d18bc"
        },
        "item": {
          "id": "d297f917-f6d9-4e37-b597-22bb1928a61c",
          "name": "Access Token Missing",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "items"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4130927a-70cb-4610-8c3a-386a347adc94",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "pm.test(\"Status code is 401\", function () {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "pm.test(\"Status message is Unauthorized\", function () {\r",
                  "    pm.response.to.have.status(\"Unauthorized\");\r",
                  "});\r",
                  "pm.test(\"Get items failed as access token is missing\", function () {\r",
                  "    pm.expect(responseBody.message).to.eql(\"Access token missing\");\r",
                  "});\r",
                  "\r",
                  ""
                ],
                "_lastExecutionId": "2e1fb186-1d52-411f-9344-1364e2a10841"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "items"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5674e4e1-52e1-4e00-9f69-e2ae357b650d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "255714e9-2c1c-4e6b-98d2-49657bc88437",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "34"
            },
            {
              "key": "ETag",
              "value": "W/\"22-mHySlHCODvgk3Kz1vvot/dGIktw\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              65,
              99,
              99,
              101,
              115,
              115,
              32,
              116,
              111,
              107,
              101,
              110,
              32,
              109,
              105,
              115,
              115,
              105,
              110,
              103,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 9,
          "responseSize": 34
        },
        "id": "d297f917-f6d9-4e37-b597-22bb1928a61c",
        "assertions": [
          {
            "assertion": "Status code is 401",
            "skipped": false
          },
          {
            "assertion": "Status message is Unauthorized",
            "skipped": false
          },
          {
            "assertion": "Get items failed as access token is missing",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "137042ac-5f10-44ad-aef7-9ad1a7ded735",
          "length": 10,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ffcd765-1881-4ce6-b81b-f67ac6d41cee"
        },
        "item": {
          "id": "32be32af-1081-43fa-a274-5c8446c00154",
          "name": "User Already Exists",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "register"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "74f3fdfc-5435-4c3b-a45e-cf72cde6b644",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "pm.test(\"Status code is 409\", function () {\r",
                  "    pm.response.to.have.status(409);\r",
                  "});\r",
                  "pm.test(\"user registration failed as User already exists\", function () {\r",
                  "    pm.expect(responseBody.error).to.eql(\"User already exists\");\r",
                  "});"
                ],
                "_lastExecutionId": "e81ba9e8-dacc-4948-8b69-9ff0ca89b201"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "register"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3842b85a-e3b3-4f81-8a6f-0faef84bf6bb",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "133",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "a4a8fc87-58ff-4416-aee6-e362626753e3",
          "status": "Conflict",
          "code": 409,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "31"
            },
            {
              "key": "ETag",
              "value": "W/\"1f-lFUySNKwX3L5eGEwGcNcUoVKWhE\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:11 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              85,
              115,
              101,
              114,
              32,
              97,
              108,
              114,
              101,
              97,
              100,
              121,
              32,
              101,
              120,
              105,
              115,
              116,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 115,
          "responseSize": 31
        },
        "id": "32be32af-1081-43fa-a274-5c8446c00154",
        "assertions": [
          {
            "assertion": "Status code is 409",
            "skipped": false
          },
          {
            "assertion": "user registration failed as User already exists",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cf027197-18f1-41cc-a7fa-4c7de533abd8",
          "length": 10,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a8374737-a519-4ece-a0d5-10e8cfb71b7b"
        },
        "item": {
          "id": "7eee3890-95b1-4dba-8eea-26fa25ca04e8",
          "name": "Item Not Found",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "items",
                "5"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "4d994ae5-58e2-4feb-aca6-40208cf61b0a",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                  "\r",
                  "pm.request.headers.add({\r",
                  "    key: 'Authorization',\r",
                  "    value: token\r",
                  "});"
                ],
                "_lastExecutionId": "2a3a1962-844e-4406-8806-9661c23910e7"
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "298d4c20-2f8e-450e-808a-51b461ff9c00",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "pm.test(\"Status code is 404\", function () {\r",
                  "    pm.response.to.have.status(404);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Delete item failed as Item not found \", function () {\r",
                  "    pm.expect(responseBody.message).to.eql(\"Item not found\");\r",
                  "});"
                ],
                "_lastExecutionId": "64aac23a-79cb-4ed7-83c0-b46235fdb84a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "items",
              "5"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJzaGVsZG9uY29vcGVyQGdtYWlsLmNvbSIsImlhdCI6MTc1MzM5NDgzMCwiZXhwIjoxNzUzMzk4NDMwfQ.zDCaqaM6Izt3l0l2FU8F3NL2fPmVve2TY3UA41A3AdE"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5d584df5-93e8-45ba-9362-42cc0af5a80a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "8143ebc6-f4ee-4dac-82fe-8328869fa39d",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "28"
            },
            {
              "key": "ETag",
              "value": "W/\"1c-OqRAEHB09m693LkZpvKoMUaiB2s\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:11 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              116,
              101,
              109,
              32,
              110,
              111,
              116,
              32,
              102,
              111,
              117,
              110,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 30,
          "responseSize": 28
        },
        "id": "7eee3890-95b1-4dba-8eea-26fa25ca04e8",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          },
          {
            "assertion": "Delete item failed as Item not found ",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "427da608-c6a8-47c8-a252-635178d6b64f",
          "length": 10,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "79a4e47a-65b6-4051-8e6e-2862f5287a9f"
        },
        "item": {
          "id": "5e8fd995-0492-4ccd-bd7b-5d3b0aed4978",
          "name": "Invalid Credentials",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "login"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"email\" : \"bob231@gma\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b57db703-b76c-49cf-a8c3-2c513ccd0b5b",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "pm.test(\"Status code is 401\", function () {\r",
                  "    pm.response.to.have.status(401);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Login failed with error Invalid credentials \", function () {\r",
                  "    pm.expect(responseBody.message).to.eql(\"Invalid credentials\");\r",
                  "});"
                ],
                "_lastExecutionId": "e8ee016b-3269-4e4b-87f2-7c0f6c90ac28"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "5000",
            "path": [
              "login"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "82435386-513e-4fe7-9850-5dc9092d3d3f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:5000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "66",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"email\" : \"bob231@gma\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6cbad7ae-7697-4d3d-a387-bece8ad9f644",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "X-Powered-By",
              "value": "Express"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "33"
            },
            {
              "key": "ETag",
              "value": "W/\"21-dBEoW0UmTF+EGUMaprEp9/8zNNA\""
            },
            {
              "key": "Date",
              "value": "Thu, 24 Jul 2025 22:07:11 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              118,
              97,
              108,
              105,
              100,
              32,
              99,
              114,
              101,
              100,
              101,
              110,
              116,
              105,
              97,
              108,
              115,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 8,
          "responseSize": 33
        },
        "id": "5e8fd995-0492-4ccd-bd7b-5d3b0aed4978",
        "assertions": [
          {
            "assertion": "Status code is 401",
            "skipped": false
          },
          {
            "assertion": "Login failed with error Invalid credentials ",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 702
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 201",
          "message": "expected response to have status code 201 but got 409",
          "stack": "AssertionError: expected response to have status code 201 but got 409\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "37dd7bf325ada6c5f81ed1ddb1cff881",
          "id": "6a9f80ed-908a-4d43-bdbc-75af64df762c",
          "timestamp": 1753394829992,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e2be2089-8ad9-45b8-a928-d34ff793854e",
          "name": "Register User",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "register"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90504df0-2381-4078-b20c-f008025f0c04",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "pm.test(\"Validate user registration\", function () {\r",
                  "    pm.expect(responseBody.message).to.eql(\"User registered successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "cc158c7f-d820-4e14-b755-13796dadba88"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ef6234cf-217d-4985-a7f8-1b4b43f0fe83",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "35a66fe3-1fa9-4369-9adc-e3340e1670d5"
              }
            }
          ]
        },
        "parent": {
          "id": "d9898580-4546-4868-920a-889bce058c5f",
          "name": "Positive Cases",
          "item": [
            {
              "id": "e2be2089-8ad9-45b8-a928-d34ff793854e",
              "name": "Register User",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "90504df0-2381-4078-b20c-f008025f0c04",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var responseBody = pm.response.json();\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "pm.test(\"Validate user registration\", function () {\r",
                      "    pm.expect(responseBody.message).to.eql(\"User registered successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cc158c7f-d820-4e14-b755-13796dadba88"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ef6234cf-217d-4985-a7f8-1b4b43f0fe83",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "35a66fe3-1fa9-4369-9adc-e3340e1670d5"
                  }
                }
              ]
            },
            {
              "id": "17153d7d-c290-4418-b6ae-4e51190c6bcb",
              "name": "Login",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "login"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\" : \"sheldoncooper@gmail.com\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03834f55-dca9-4d24-8fd1-f62644c2d11a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var responseBody = pm.response.json();\r",
                      "pm.collectionVariables.set(\"Authtoken\", responseBody.token);"
                    ],
                    "_lastExecutionId": "c2f8747d-a3e1-49be-9f63-623ef879e64a"
                  }
                }
              ]
            },
            {
              "id": "3af240c2-a70b-441f-81a3-6f692cf75b7c",
              "name": "Get Items",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "95ab4a17-0baa-47d9-9eda-17fd252970ae",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});"
                    ],
                    "_lastExecutionId": "2cd67453-69b4-4720-bd63-881b60934b3f"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "bef54139-0eb1-4605-9386-852cec0637be",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "82c1a45c-0baf-431a-8f59-2eb29ba50274"
                  }
                }
              ]
            },
            {
              "id": "db92ef0e-08a3-4f89-a1ef-697d51b58584",
              "name": "Add Item",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"Iphone 18\", \r\n    \"quantity\": 10\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "bf9db251-c87c-449e-a747-da1beb345a0d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});"
                    ],
                    "_lastExecutionId": "73695b51-66b0-49cd-9d02-fc3db17a3394"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "36008f9c-9eec-4c45-adc1-c04a1f952b84",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var responseBody = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response contains the \"Id\" property', function () {\r",
                      "    pm.expect(responseBody).to.have.property('id');\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.collectionVariables.set(\"ItemId\", responseBody.id);"
                    ],
                    "_lastExecutionId": "046c9801-7eb6-432b-9bb5-3b53d286eab5"
                  }
                }
              ]
            },
            {
              "id": "b5e1ac1d-abe9-4ac4-a380-c55bae74aa65",
              "name": "Update Item",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items",
                    "{{ItemId}}"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\" : \"Mac Book Air\",\r\n    \"quantity\": \"89\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "cedf5062-d6e0-41b8-8986-fab51d8d148f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "var itemId = pm.collectionVariables.get('ItemId')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d3805bfe-dfcd-41ce-b9ad-2212d7702ab0"
                  }
                }
              ]
            },
            {
              "id": "7b1e2554-bc1b-41c5-8fa9-c17132e717f4",
              "name": "Delete Item",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items",
                    "{{ItemId}}"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a42a16d9-a638-445e-9f73-72e92b09a918",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});"
                    ],
                    "_lastExecutionId": "46e37a51-b374-4807-b5d3-995963842c45"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "afad3af7-57d6-4d3e-b393-6a12e7e61107",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 204\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "_lastExecutionId": "f52730b1-9889-4e08-bf75-2ebd1ae7a714"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "97f68f06-ce00-470b-898c-d62d3c11dc3e",
          "httpRequestId": "010c9c2b-02c0-41de-8e5b-e2e7f745d519",
          "scriptId": "90504df0-2381-4078-b20c-f008025f0c04",
          "execution": "cc158c7f-d820-4e14-b755-13796dadba88"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Validate user registration",
          "message": "expected undefined to deeply equal 'User registered successfully'",
          "stack": "AssertionError: expected undefined to deeply equal 'User registered successfully'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "5ed1fa4b36ba49b901931adcd7d77917",
          "id": "cb8f184e-a404-49a4-bec4-8f64d0c2b074",
          "timestamp": 1753394829999,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "e2be2089-8ad9-45b8-a928-d34ff793854e",
          "name": "Register User",
          "request": {
            "url": {
              "protocol": "http",
              "port": "5000",
              "path": [
                "register"
              ],
              "host": [
                "localhost"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90504df0-2381-4078-b20c-f008025f0c04",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  "var responseBody = pm.response.json();\r",
                  "pm.test(\"Status code is 201\", function () {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "pm.test(\"Validate user registration\", function () {\r",
                  "    pm.expect(responseBody.message).to.eql(\"User registered successfully\");\r",
                  "});"
                ],
                "_lastExecutionId": "cc158c7f-d820-4e14-b755-13796dadba88"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "ef6234cf-217d-4985-a7f8-1b4b43f0fe83",
                "type": "text/javascript",
                "packages": {},
                "exec": [
                  ""
                ],
                "_lastExecutionId": "35a66fe3-1fa9-4369-9adc-e3340e1670d5"
              }
            }
          ]
        },
        "parent": {
          "id": "d9898580-4546-4868-920a-889bce058c5f",
          "name": "Positive Cases",
          "item": [
            {
              "id": "e2be2089-8ad9-45b8-a928-d34ff793854e",
              "name": "Register User",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "register"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"firstName\": \"Sheldon\",\r\n    \"lastName\": \"Cooper\",\r\n    \"password\": \"Test345\",\r\n    \"email\":\"sheldoncooper@gmail.com\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "90504df0-2381-4078-b20c-f008025f0c04",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var responseBody = pm.response.json();\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "pm.test(\"Validate user registration\", function () {\r",
                      "    pm.expect(responseBody.message).to.eql(\"User registered successfully\");\r",
                      "});"
                    ],
                    "_lastExecutionId": "cc158c7f-d820-4e14-b755-13796dadba88"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "ef6234cf-217d-4985-a7f8-1b4b43f0fe83",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      ""
                    ],
                    "_lastExecutionId": "35a66fe3-1fa9-4369-9adc-e3340e1670d5"
                  }
                }
              ]
            },
            {
              "id": "17153d7d-c290-4418-b6ae-4e51190c6bcb",
              "name": "Login",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "login"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"email\" : \"sheldoncooper@gmail.com\",\r\n    \"password\": \"Test345\"\r\n    \r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "03834f55-dca9-4d24-8fd1-f62644c2d11a",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "var responseBody = pm.response.json();\r",
                      "pm.collectionVariables.set(\"Authtoken\", responseBody.token);"
                    ],
                    "_lastExecutionId": "c2f8747d-a3e1-49be-9f63-623ef879e64a"
                  }
                }
              ]
            },
            {
              "id": "3af240c2-a70b-441f-81a3-6f692cf75b7c",
              "name": "Get Items",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "95ab4a17-0baa-47d9-9eda-17fd252970ae",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});"
                    ],
                    "_lastExecutionId": "2cd67453-69b4-4720-bd63-881b60934b3f"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "bef54139-0eb1-4605-9386-852cec0637be",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      ""
                    ],
                    "_lastExecutionId": "82c1a45c-0baf-431a-8f59-2eb29ba50274"
                  }
                }
              ]
            },
            {
              "id": "db92ef0e-08a3-4f89-a1ef-697d51b58584",
              "name": "Add Item",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\": \"Iphone 18\", \r\n    \"quantity\": 10\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "bf9db251-c87c-449e-a747-da1beb345a0d",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});"
                    ],
                    "_lastExecutionId": "73695b51-66b0-49cd-9d02-fc3db17a3394"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "36008f9c-9eec-4c45-adc1-c04a1f952b84",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var responseBody = pm.response.json();\r",
                      "\r",
                      "pm.test(\"Status code is 201\", function () {\r",
                      "    pm.response.to.have.status(201);\r",
                      "});\r",
                      "\r",
                      "pm.test('Response contains the \"Id\" property', function () {\r",
                      "    pm.expect(responseBody).to.have.property('id');\r",
                      "});\r",
                      "\r",
                      "\r",
                      "pm.collectionVariables.set(\"ItemId\", responseBody.id);"
                    ],
                    "_lastExecutionId": "046c9801-7eb6-432b-9bb5-3b53d286eab5"
                  }
                }
              ]
            },
            {
              "id": "b5e1ac1d-abe9-4ac4-a380-c55bae74aa65",
              "name": "Update Item",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items",
                    "{{ItemId}}"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\r\n    \"name\" : \"Mac Book Air\",\r\n    \"quantity\": \"89\"\r\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "cedf5062-d6e0-41b8-8986-fab51d8d148f",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "var itemId = pm.collectionVariables.get('ItemId')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});\r",
                      "\r",
                      ""
                    ],
                    "_lastExecutionId": "d3805bfe-dfcd-41ce-b9ad-2212d7702ab0"
                  }
                }
              ]
            },
            {
              "id": "7b1e2554-bc1b-41c5-8fa9-c17132e717f4",
              "name": "Delete Item",
              "request": {
                "url": {
                  "protocol": "http",
                  "port": "5000",
                  "path": [
                    "items",
                    "{{ItemId}}"
                  ],
                  "host": [
                    "localhost"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE",
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "id": "a42a16d9-a638-445e-9f73-72e92b09a918",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "var token = 'Bearer ' + pm.collectionVariables.get('Authtoken')\r",
                      "\r",
                      "pm.request.headers.add({\r",
                      "    key: 'Authorization',\r",
                      "    value: token\r",
                      "});"
                    ],
                    "_lastExecutionId": "46e37a51-b374-4807-b5d3-995963842c45"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "id": "afad3af7-57d6-4d3e-b393-6a12e7e61107",
                    "type": "text/javascript",
                    "packages": {},
                    "exec": [
                      "pm.test(\"Status code is 204\", function () {\r",
                      "    pm.response.to.have.status(204);\r",
                      "});"
                    ],
                    "_lastExecutionId": "f52730b1-9889-4e08-bf75-2ebd1ae7a714"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 10,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "97f68f06-ce00-470b-898c-d62d3c11dc3e",
          "httpRequestId": "010c9c2b-02c0-41de-8e5b-e2e7f745d519",
          "scriptId": "90504df0-2381-4078-b20c-f008025f0c04",
          "execution": "cc158c7f-d820-4e14-b755-13796dadba88"
        }
      }
    ],
    "error": null
  }
}